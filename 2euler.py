#!/usr/bin/env python

# Even Fibonacci numbers
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# TODO find something more analytical (every 3th term is even, skiping 0)

def fib_even_sum_below_term(below_term):
    prev, curr = 0, 1
    even_sum = 0
    while(True):
        prev, curr = curr, prev + curr
        if curr > below_term:
            break
        if (curr % 2 == 0):
            even_sum += curr
    return even_sum


def main():
    print(fib_even_sum_below_term(4e+6))


if __name__ == '__main__':
    main()
